podTemplate(
    label: 'docker-build',
    containers: [
        containerTemplate(
            name: 'docker',
            image: 'docker',
            command: 'cat',
            ttyEnabled: true
        ),
        containerTemplate(
            name: 'argo',
            image: 'argoproj/argo-cd-ci-builder:latest',
            command: 'cat',
            ttyEnabled: true
        )
    ],
    volumes: [
         hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
    ]
) {
    node('docker-build') {
        try {
            stage('Checkout') {
                checkout scm
            }

            stage('Test') {
                steps {
                    dir("${env.WORKSPACE}") {
                        sh 'chmod 755 ./gradlew'
                        sh './gradlew test'
                    }
                }
            }

            slackSend(
                channel: 'deployment-notification',
                color: 'good',
                message: "[Successful] Job:${env.JOB_NAME}, Build num:${env.BUILD_NUMBER} (<${env.RUN_DISPLAY_URL}|open job detail>)"
            )
        } catch (Exception e) {
            slackSend(
                channel: 'deployment-notification',
                color: 'danger',
                message: "[Failed] Job:${env.JOB_NAME}, Build num:${env.BUILD_NUMBER} @channel (<${env.RUN_DISPLAY_URL}|open job detail>)"
            )

            throw e
        }
    }
}
